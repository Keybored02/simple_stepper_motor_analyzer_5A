; PlatformIO Project Configuration File
; 
;
; Platform io documentation:
; https://docs.platformio.org/page/projectconf.html
;
; Using a third party platformio fraemwrok from WizIo which 
; gives the bare Pico C++ SDK exprience.
;
; USB Serial notes:
; 1. Use 'zadig' app to set 'Board CDC' device (id: 2E8A/000A), 
;    to driver USB Serial (CDC)
; 2. Update the monitor_port COM port below to the actual number
;    the Pico is assinged to on your system. 
; 3. The expected functionality is that pressing the platformio
; Upload button (right arrow at the bottom of the screen), will
; build the program, upload it to the Pico and restart the 
; anaylzer's program. 

[env:raspberry-pi-pico]
; Fixing to Wizio 1.08 which is known to be good.
#platform = https://github.com/Wiz-IO/wizio-pico.git#3250e0732cf4c0ff72d4c689317fc7481a34b612 ##repo deleted ; https://community.platformio.org/t/solved-can-not-install-https-github-com-wiz-io-wizio-pico-1-post-here-please-help/30716/14
platform = https://github.com/maxgerhardt/wizio-pico.git
platform_packages =
	framework-wizio-pico@https://github.com/Wiz-IO/framework-wizio-pico.git#6f1e42f31a10441688c67588d98ffc9473a2470d
board = raspberry-pi-pico
framework = baremetal
upload_protocol = picoprobe
debug_tool = picoprobe
; Adjust it to the COM port used by the analyzer on your system.
monitor_port = COM3
; This enables Pico's int64 printf.
board_build.nano = disable
board_build.pio = src/display/tft_driver.pio
build_flags = 
	-O3
	-Wno-missing-field-initializers
	-I src
	-I "$PROJECT_CORE_DIR/packages/framework-wizio-pico/SDK111/hardware"
	-I "$PROJECT_CORE_DIR/packages/framework-wizio-pico/SDK/pico"
	-D PICO_STDIO_USB
lib_ignore = freertos, wiring
 

;monitor_speed = 115200

;lib_deps = 
